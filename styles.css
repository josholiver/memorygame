* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    /*
    The default value for box-sizing is content-box
    which means that any border or padding applied to the 
    element will add to its total width and height.4

    box-sizing: border-box which adds padding and border to
    the element without changing its dimensions.

    box-sizing is never applied to Margin
    */
}

body {
    height: 100vh;
    /*
    vh = viewport height (i.e. the visible area of the webpage)
    */
    display: flex;
    background-color: #060AB2;
}

.memory-game {
    width: 640px;
    height: 640px;
    margin: auto;
    display: flex;
    /* applies other properties for us:
        flex-item{
            flex: 1; 
            each one of you will take the same amount of space on the screen.
        }
        flex-container:{
            your items shall be laid out in a row
            flex-direction: row;
            in just one row
            flex-wrap: nowrap;
            they're gonna be positioned left-right
            justify-content: flex-start;
            they will be strcched out to the containers height
            align-items: stretch;
        }
    */
    flex-wrap: wrap;
    perspective: 1000px;
}

.memory-card {
    width: calc(25% - 10px);
    height: calc(33.333% - 10px);
    position: relative;
    margin: 5px;
    transform: scale(1);
    transform-style: preserve-3d;
    transition: transform .5s;
}

.memory-card:active {
    transform: scale(.97);
    transition: transform .2s;
}

.memory-card.flip {
    transform: rotateY(180deg);
}

/*
    for 3D effect use prespective
*/



.front-face,
.back-face {
    width: 100%;
    height: 100%;
    padding: 20px;
    border-radius: 5px;
    background: #1c7ccc;
    position: absolute;
    backface-visibility: hidden;
}

.front-face {
    transform: rotateY(180deg);
}